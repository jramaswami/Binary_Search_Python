"""
binarysearch.com :: Split Digits to Sum Closest To Target
jramaswami
"""
class Solution:
    def solve(self, s, target):
        dp = [set() for _ in s]
        prev_sums = set([0])
        for i, c in enumerate(s):
            ts = [int(c), int(s[i:i+2]), int(s[i:i+3]), int(s[i:i+4])]
            for j, t in enumerate(ts):
                if t >= 2000:
                    continue
                for p in prev_sums:
                    if i+j < len(dp) and p + t <= 9000:
                        dp[i+j].add(p + t)
            prev_sums = dp[i]

        return min(abs(target - p) for p in dp[-1])


def test_1():
    s = "112"
    target = 10
    assert Solution().solve(s, target) == 3

def test_2():
    s = "500"
    target = 300
    assert Solution().solve(s, target) == 200

def test_3():
    s = "2310"
    target = 11
    assert Solution().solve(s, target) == 4

def test_4():
    s = "00000008000000000000220002000030004000005000000200000000012010000010700000440000001040000070000006000500000007001000804000070000040050000068900004000000005400000000000050000000000000020500000001000050"
    target = 200
    assert Solution().solve(s, target) == 3

def test_5():
    s = "1001"
    target = 1000
    assert Solution().solve(s, target) == 1

def test_6():
    s
    target = 400
    assert Solution().solve(s, target) == 273

def test_7():
    s = "0"
    target = 1
    assert Solution().solve(s, target) == 1
